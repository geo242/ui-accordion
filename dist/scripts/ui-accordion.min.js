"use strict";angular.module("uiAccordion",[]),angular.module("uiAccordion").directive("ngAccordionHeading",function(){return{require:"^ngAccordionGroup",restrict:"EA",link:function(a,b,c,d){d.setHeaderElement(b)}}}),angular.module("uiAccordion").directive("ngAccordionBody",function(){return{require:"^ngAccordionGroup",restrict:"EA",link:function(a,b,c,d){d.setBodyElement(b)}}}),angular.module("uiAccordion").directive("ngAccordionGroup",function(a,b,c){return{require:["^ngAccordion","ngAccordionGroup"],restrict:"EA",controller:"NgAccordionGroupCtrl",scope:{options:"=?"},link:function(d,e,f,g){function h(a,b){for(var c=Object.keys(b),d=0;d<c.length;d++)a[c[d]]=a[c[d]]||m[c[d]]}var i,j,k,l,m;j=g[1],i=g[0],k=i.accordion,l=a.createAccordionGrp(),m=a.defaultAccordionGroupOptions(),d.options=d.options||{},h(d.options,m),l.options=d.options,d.$watch("options",function(a){h(l.options,a),a&&!a.disabled&&k.applyState(l)},!0),b.all([j.getHeaderElement(),j.getBodyElement()]).then(function(a){l.header=a[0],l.body=a[1],d.options.open?l.$animate("show","beforeOpen","animateOpen"):l.$animate("hide","beforeHide","animateClose"),l.header.on("click",function(){l.options.disabled||(l.options.open=!l.options.open,k.applyState(l)),c(function(){d.$apply()})}),k.addGroup(l)})}}}),angular.module("uiAccordion").directive("ngAccordion",function(a){return{restrict:"A",link:function(b,c,d,e){var f=a.fetchFromObject(b,d.options);f&&angular.extend(e.accordion.options,f),b.$watchCollection(d.options,function(a,b){a&&a!==b&&angular.extend(e.accordion.options,a)})},controller:"NgAccordionCtrl"}}),angular.module("uiAccordion").controller("NgAccordionGroupCtrl",function(a){var b,c;b=a.defer(),c=a.defer(),this.setHeaderElement=function(a){b.resolve(a)},this.getHeaderElement=function(){return b.promise},this.setBodyElement=function(a){c.resolve(a)},this.getBodyElement=function(){return c.promise}}),angular.module("uiAccordion").controller("NgAccordionCtrl",function(a){this.accordion=a.createAccordion()}),angular.module("uiAccordion").service("accordionGroup",function(a,b,c){function d(){}function e(){var b=a.defer();return c(function(){b.resolve("")}),b.promise}function f(a){b.error(a)}return d.prototype.$animate=function(b,c,d){var e=this;a.when(e.options[c]()).then(function(){e.options[d].call(e,b)},f)},{createAccordionGrp:function(){return new d},defaultAccordionGroupOptions:function(){return{open:!1,disabled:!1,beforeOpen:e,beforeHide:e,animateOpen:function(a){this.body[a]("slow")},animateClose:function(a){this.body[a]()}}}}}),angular.module("uiAccordion").service("accordion",function(){function a(){this.groups=[],this.options={closeOthers:!0}}return a.prototype.addGroup=function(a){this.groups.push(a)},a.prototype.getGroups=function(){return this.groups},a.prototype.applyState=function(a){a&&(a.options.open?(a.$animate("slideDown","beforeOpen","animateOpen"),this.closeOthers(a)):a.$animate("slideUp","beforeHide","animateClose"))},a.prototype.closeOthers=function(a){if(this.options.closeOthers)for(var b=0;b<this.groups.length;b++)a===this.groups[b]||(this.groups[b].options.open=!1,this.groups[b].$animate("slideUp","beforeHide","animateClose"))},{createAccordion:function(){return new a}}}),angular.module("uiAccordion").service("objectUtil",function(){this.fetchFromObject=function a(b,c){if("undefined"!=typeof b&&"undefined"!=typeof c){var d=c.indexOf(".");return d>-1?a(b[c.substring(0,d)],c.substr(d+1)):b[c]}}});